headers {
  Authorization: Bearer eyJhbGciOiJSUzI1NiIsInR5cCIgOiAiSldUIiwia2lkIiA6ICJidTVxVlJuZ0xZUTVhdnVxenVjbEoybzB4aFNhTjQ2Y2h1elJQb2xqUWw0In0.eyJleHAiOjE3NDg2MjYyMTAsImlhdCI6MTc0ODYyNTkxMCwianRpIjoiNWQyMDI5YzQtNzk2OS00NjM5LTk4YmYtOGJkYmU5NzhhZTgyIiwiaXNzIjoiaHR0cHM6Ly9zb2FtLWRldi5hcHBzLnNpbHZlci5kZXZvcHMuZ292LmJjLmNhL2F1dGgvcmVhbG1zL21hc3RlciIsImF1ZCI6ImFjY291bnQiLCJzdWIiOiIzYTYwN2MyNy01ZDE3LTQ3MjMtYWM0YS02ZmE3MjBlNGJmMzUiLCJ0eXAiOiJCZWFyZXIiLCJhenAiOiJjZGl0Y2hlci10ZXN0LWNsaWVudCIsInJlYWxtX2FjY2VzcyI6eyJyb2xlcyI6WyJvZmZsaW5lX2FjY2VzcyIsInVtYV9hdXRob3JpemF0aW9uIl19LCJyZXNvdXJjZV9hY2Nlc3MiOnsiYWNjb3VudCI6eyJyb2xlcyI6WyJtYW5hZ2UtYWNjb3VudCIsIm1hbmFnZS1hY2NvdW50LWxpbmtzIiwidmlldy1wcm9maWxlIl19fSwic2NvcGUiOiJERUxFVEVfRElTVFJJQ1RfQUREUkVTUyBSRUFEX0dSQURfU1RVREVOVF9TVEFUVVNfQ09ERV9EQVRBIFJFQURfR1JBRF9TQ0hPT0xfREFUQSBSRUFEX0dSQURfU1RVREVOVF9EQVRBIFJFQURfU1RVREVOVCBSRUFEX0dSQURfVFJBWF9DT1VSU0VfREFUQSBXUklURV9FRFhfVVNFUl9ESVNUUklDVF9ST0xFIFdSSVRFX1NUVURFTlQgV1JJVEVfRElTVFJJQ1QgUkVBRF9HUkFEX0dSQURVQVRJT05fU1RBVFVTIFJFQURfU0NIT09MIHByb2ZpbGUgUkVBRF9HUkFEX1JFUVVJUkVNRU5UX1RZUEVfQ09ERV9EQVRBIENPUkVHX1JFQURfQ09VUlNFIFdSSVRFX0VWRU5UX0hJU1RPUlkgV1JJVEVfRElTVFJJQ1RfQ09OVEFDVCBSRUFEX1NEQ19ESVNUUklDVF9DT0xMRUNUSU9OIERFTEVURV9TRENfRElTVFJJQ1RfQ09MTEVDVElPTiBSRUFEX0RJU1RSSUNUX0NPTlRBQ1QgUkVBRF9FVkVOVF9ISVNUT1JZIFdSSVRFX0RJU1RSSUNUX0FERFJFU1MgREVMRVRFX0VEWF9VU0VSX0RJU1RSSUNUX1JPTEUgV1JJVEVfU0NIT09MIERJU1RSSUNUX1VTRVJfQUNUSVZBVElPTl9JTlZJVEVfU0FHQSBXUklURV9TRENfRElTVFJJQ1RfQ09MTEVDVElPTiBlbWFpbCIsImNsaWVudElkIjoiY2RpdGNoZXItdGVzdC1jbGllbnQiLCJlbWFpbF92ZXJpZmllZCI6ZmFsc2UsImNsaWVudEhvc3QiOiIxNDIuMjguMTI3LjE4NCIsInByZWZlcnJlZF91c2VybmFtZSI6InNlcnZpY2UtYWNjb3VudC1jZGl0Y2hlci10ZXN0LWNsaWVudCIsImNsaWVudEFkZHJlc3MiOiIxNDIuMjguMTI3LjE4NCJ9.aTgBnZgai_FuxAvU3MiwVRrQeXLwdJDaOu0-YmrJegGFfv6cdxCp0Zi_bAxozfTkxisEJPfm7JrBFfQxO0BVdBd1bkXKSMcAggFIhixW0h6UVADKb_uf_Dqql35bWeIQIzHyvtrC6Z_hslv2aRllZGhzUImXKUdl1RoIT7uBb9ddwdLXY0UL6IE86vgy3vo3mgkI5p56dwwUJcSrrmQE5wEb0TnMIau4CoqkEnCJ5jEsU-SPISEXnRtChJiXc42weUCUmmhFqQSJ6RE2RX7S9avBSVjYA-_cGIsqHqgvxv-TnYLOoBbFKd1YT0Ue2SjgvuY3D587z4Oh5RBT_h_rng
}

auth {
  mode: oauth2
}

auth:oauth2 {
  grant_type: client_credentials
  access_token_url: {{tokenRootUrl}}/auth/realms/master/protocol/openid-connect/token
  refresh_token_url: 
  client_id: {{clientId}}
  client_secret: {{secret}}
  scope: 
  credentials_placement: body
  credentials_id: credentials
  token_placement: header
  token_header_prefix: Bearer
  auto_fetch_token: true
  auto_refresh_token: false
}

script:post-response {
  if(req.getAuthMode() == 'oauth2' && res.body.access_token) {
      bru.setVar('token', res.body.access_token);
  }
}
