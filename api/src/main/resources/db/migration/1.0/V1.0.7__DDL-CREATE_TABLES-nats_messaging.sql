CREATE TABLE "REPLICATION_EVENT"
(
    "REPLICATION_EVENT_ID" RAW(16)                      NOT NULL,
    "EVENT_ID"      RAW(16)                             NOT NULL,
    "EVENT_PAYLOAD" BLOB                                NOT NULL,
    "EVENT_STATUS"  VARCHAR2(50)                        NOT NULL,
    "EVENT_TYPE"    VARCHAR2(100)                       NOT NULL,
    "EVENT_OUTCOME" VARCHAR2(100)                       NOT NULL,
    "CREATE_USER" VARCHAR2(32 BYTE),
    "CREATE_DATE" TIMESTAMP (6) DEFAULT CURRENT_TIMESTAMP,
    "UPDATE_USER" VARCHAR2(32 BYTE),
    "UPDATE_DATE" TIMESTAMP (6) DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT REPLICATION_EVENT_PK PRIMARY KEY (REPLICATION_EVENT_ID)
);

CREATE INDEX REPLICATION_EVENT_EVENT_STATUS_IDX ON REPLICATION_EVENT (EVENT_STATUS);
CREATE INDEX REPLICATION_EVENT_EVENT_TYPE_IDX ON REPLICATION_EVENT (EVENT_TYPE);
ALTER TABLE REPLICATION_EVENT
    ADD CONSTRAINT REPLICATION_EVENT_EVENT_ID_UK UNIQUE (EVENT_ID);

COMMENT ON TABLE REPLICATION_EVENT IS 'This table is used to store all the received choreographed events from different api via pub/sub model and process them.';


CREATE TABLE "REPLICATION_SHEDLOCK"
(
    "NAME"       VARCHAR(64),
    "LOCK_UNTIL" TIMESTAMP(3) NULL,
    "LOCKED_AT"  TIMESTAMP(3) NULL,
    "LOCKED_BY"  VARCHAR(255),
    CONSTRAINT REPLICATION_SHEDLOCK_PK PRIMARY KEY (NAME)
);

COMMENT ON TABLE REPLICATION_SHEDLOCK IS 'This table is used to achieve distributed lock between pods, for schedulers.';